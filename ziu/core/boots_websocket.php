<?php
/* vim:se et ts=4 sw=4 sts=4: */
/**
 * Ziu bootstrap
 * 
 * Note: Do not edit this file
 * 
 * LICENSE: MIT License.
 * 
 * @copyright 2012 Topazos, Inc.
 * @since File available since Release 1.0.0
 */

/**
 * Define DIRECTORY_SEPARATOR
 */
define('DS', DIRECTORY_SEPARATOR);

/**
 * Start Loader
 */
require dirname(__FILE__) . DS . 'conf' . DS . 'constants.php';
require dirname(__FILE__) . DS . 'base' . DS . 'loader.php';

$loader = new Ziu_Loader;

// {{{ Timezone for date
/**
 * Set date default timezone for date()
 */
if (function_exists('date_default_timezone_set')) {
    $tz = $loader->conf('core/date_timezone');
    date_default_timezone_set((! empty($tz) ? $tz : 'Asia/Tokyo'));
}
// }}}

// {{{ Internal encoding
if ($enc = $loader->conf('core/internal_encoding')) {
    mb_internal_encoding($enc);
}
// }}}

// {{{ Error handle
/**
 * Set php error level and display
 */
error_reporting(E_ALL | E_STRICT);                        // all level of error
ini_set('log_errors', 1);                                 // log error on
ini_set('error_log', $loader->conf('env/php_error_log')); // path of error log
ini_set('display_errors', 0);                             // always hide error

/**
 * Set shutdown function
 */
register_shutdown_function(array($loader->core('error'), 'shutdown_handler'));

/**
 * Set error handler
 */
set_error_handler(array($loader->core('error'), 'error_handler'));

/**
 * Set exception handler
 */
set_exception_handler(array($loader->core('error'), 'exception_handler'));
// }}}

// {{{ PHP Websocket
/* This program is free software. It comes without any warranty, to
 * the extent permitted by applicable law. You can redistribute it
 * and/or modify it under the terms of the Do What The Fuck You Want
 * To Public License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details. */

require ZIU_CORE_VENDOR_PATH . 'php-websocket/server/lib/SplClassLoader.php';

$classLoader = new SplClassLoader('WebSocket', ZIU_CORE_VENDOR_PATH . 'php-websocket/server/lib');
$classLoader->register();

$server = new \WebSocket\Server(ZIU_WS_HOST, ZIU_WS_PORT, ZIU_WS_SSL);

// Server settings:
$server->setMaxClients(ZIU_WS_SET_MAX_CLIENT);
$server->setCheckOrigin(ZIU_WS_SET_CHECK_ORIGN);
$server->setAllowedOrigin(ZIU_WS_SET_ALLOWED_ORIGN);
$server->setMaxConnectionsPerIp(ZIU_WS_SET_MAX_CONNECTIONS_PER_IP);
$server->setMaxRequestsPerMinute(ZIU_WS_SET_MAX_REQUESTS_PER_NINUTE);

// Regist base application
$loader->help('websocket');
$loader->help('core');
$server->registerApplication(ZIU_WS_NAME, websocket());
$loader->autoload('pre');
$server->run();
// }}}

